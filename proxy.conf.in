# Caching proxy to prevent overloading origins with requests

ServerName {{NAME}}

LoadModule cache_module modules/mod_cache.so
LoadModule cache_disk_module modules/mod_cache_disk.so
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule unique_id_module modules/mod_unique_id.so
LoadModule rewrite_module modules/mod_rewrite.so

LogFormat {{LOG_FORMAT}} log_format

<VirtualHost *:80>
  ErrorLog /dev/stderr  
  CustomLog /dev/stdout log_format

  LogLevel {{LOG_LEVEL}}

  CacheEnable disk /
  CacheDirLevels 1
  CacheDirLength 3

  # The CacheMaxFileSize must be large enough to hold the remixed MP4 file.
  CacheMaxFileSize {{CACHE_MAX_FILESIZE}}

  # Enable the cache lock
  CacheLock on
  CacheLockMaxAge 30

  CacheHeader on
  CacheDetailHeader on

  CacheRoot "/var/cache/apache2/mod_cache_disk" 

  CacheIgnoreURLSessionIdentifiers remix_request_id

  # Disable the CacheQuickHander so that we can remove the Range header.
  CacheQuickHandler off
  RequestHeader unset Range

  #magic to add a unique ID for tracking remix requests
  RewriteEngine On
  RewriteCond %{QUERY_STRING} !(?:^|&)remix_request_id
  RewriteRule (.*) $1?remix_request_id=%{ENV:UNIQUE_ID} [PT,QSA,E=REMIX_REQUEST_ID:%{ENV:UNIQUE_ID}]

  RewriteCond %{QUERY_STRING} (?:^|&)remix_request_id=([^&]+)
  RewriteRule (.*) - [E=REMIX_REQUEST_ID:%1]

  RequestHeader setifempty REMIX_REQUEST_ID "%{REMIX_REQUEST_ID}e"

  ProxyPass /{{NAME}}/ http://{{TARGET}}/ connectiontimeout=5 timeout=300 disablereuse=on retry=0
  ProxyPass / http://{{TARGET}}/

</VirtualHost>